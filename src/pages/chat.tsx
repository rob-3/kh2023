import Head from "next/head";
import {
  Button,
  Frame,
  Hourglass,
  TextInput,
  Window,
  WindowContent,
  WindowHeader,
} from "react95";
import { motion } from "framer-motion";
import { useState } from "react";
import { useRouter } from "next/router";

interface Message {
  text: string;
  isPlayer: boolean;
}

const messages: Message[] = [
  { text: "Hello", isPlayer: true },
  { text: "How are you?", isPlayer: false },
  { text: "What is the best way to do this?", isPlayer: true },
  { text: "Howdy!", isPlayer: false },
  { text: "Yay next.js", isPlayer: true },
  { text: "Hello", isPlayer: true },
  { text: "How are you?", isPlayer: false },
  { text: "What is the best way to do this?", isPlayer: true },
  { text: "Howdy!", isPlayer: false },
  { text: "Yay next.js", isPlayer: true },
  { text: "Hello", isPlayer: true },
  { text: "How are you?", isPlayer: false },
  { text: "What is the best way to do this?", isPlayer: true },
];

export default function Chat() {
  const router = useRouter();

  const [inputMessage, setInputMessage] = useState("");
  const isLoading = false;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen w-screen">
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="flex h-full w-full flex-col items-center justify-center p-6"
        >
          {isLoading ? (
            <Hourglass size={48} />
          ) : (
            <Window
              className={
                "h-full w-full max-w-4xl !bg-zinc-900/70 backdrop-blur-md"
              }
            >
              <WindowHeader className={"flex justify-between"}>
                <span>adventure.exe</span>
                <Button onClick={() => void router.push("/")}>X</Button>
              </WindowHeader>
              <WindowContent
                className={"flex h-full flex-col justify-end gap-2 !pb-8"}
              >
                <div className="flex flex-col gap-4 overflow-y-auto">
                  {messages.map(({ isPlayer, text }, i) => (
                    <div
                      key={i}
                      className={`flex gap-2 ${
                        isPlayer ? "flex-row-reverse self-end" : ""
                      }`}
                    >
                      <div className={"h-8 w-8 text-center sm:h-12 sm:w-12"}>
                        {isPlayer ? "üë®‚Äçüíª" : "ü§ñ"}
                      </div>
                      <Frame
                        variant="outside"
                        shadow
                        className={`flex w-fit items-center px-2 py-1 text-white ring-2 ring-zinc-100 sm:px-4 sm:py-2`}
                      >
                        <span>{text}</span>
                      </Frame>
                    </div>
                  ))}
                </div>
                <div className={"flex gap-2"}>
                  <TextInput
                    value={inputMessage}
                    placeholder="What do you want to say?"
                    onChange={(e) => setInputMessage(e.target.value)}
                    fullWidth
                  />
                  <Button>Say</Button>
                </div>
              </WindowContent>
            </Window>
          )}
        </motion.div>
      </main>
    </>
  );
}
